openapi: 3.0.0
info:
  description: |
    This is a todoloist developed for Toduba challenge.
    Please first you need to register or login then copy the acces token from the response and paste it on the right clicking on "Authorize". This is needed to access the protected endpoints (the protected endpoints have a lock on the top right corner, this is how you can recognize them). 
  version: "1.0.0"
  title: Todolist-challenge
  contact:
    email: silvio.tari@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - description: Local server
    url: http://localhost:3001
tags:
  - name: user
    description: Registration and LogIn
  - name: todo
    description: Create, get, modify and delete todos
paths:
  /user/register:
    post:
      tags:
        - user
      summary: Create user
      description: This is the endpoint to create a new user.
      operationId: createUser
      responses:
       '201':
        description: Get the newly created user id and bearer token.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponse'
       '400':
        description: Username already exist, please choose another one.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User creation object
  /user/login:
    post:
      tags:
        - user
      summary: User login
      description: This is the endpoint to login.
      operationId: LogUser
      responses:
       '201':
        description: Get the user id and bearer token.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponse'
       '400':
        description: Incorrect password or username.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User login object
  /todo:
    post:
      tags:
        - todo
      summary: Todo creation
      security:
        - bearerAuth: []
      description: This is the endpoint to create a todo.
      operationId: TodoCreate
      responses:
       '201':
        description: Get the newly created todo.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-DB-structure'
       '401':
        description: Please provide bearer token in authorization header.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        description: Todo create object
  /todo/{userId}:
    get:
      tags:
        - todo
      summary: Get todos for a specific user
      security:
        - bearerAuth: []
      description: This is the endpoint to get all todos for a specific user.
      operationId: TodoGet
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID of the todos owner
      responses:
       '201':
        description: Get all the todos for a specific user.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo-DB-structure'
       '401':
        description: Please provide bearer token in authorization header.
  /todo/{todoId}:
    put:
      tags:
        - todo
      summary: Modify todo
      security:
        - bearerAuth: []
      description: This is the endpoint to modify a todo.
      operationId: TodoModify
      parameters:
        - in: path
          name: todoId
          schema:
            type: string
          required: true
          description: ID of the todo to modify
      responses:
       '204':
        description: Todo successfully modified.
       '401':
        description: Please provide bearer token in authorization header.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoModify'
        description: Todo modify object
  /todo/{todoid}:
    delete:
      tags:
        - todo
      summary: Delete todo
      security:
        - bearerAuth: []
      description: This is the endpoint to delete a todo.
      operationId: TodoDelete
      parameters:
        - in: path
          name: todoid
          schema:
            type: string
          required: true
          description: ID of the todo to delete
      responses:
       '200':
        description: Todo successfully deleted.
       '401':
        description: Please provide bearer token in authorization header.
components:
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      xml:
        name: User    
    User-DB-structure:
      type: object
      properties:
        id:
          type: string
          format: UUID automatically generated
        username:
          type: string
        password:
          type: string
          format: Bcrypt hash
      xml:
        name: User
    LogResponse:
      type: object
      properties:
        id:
          type: string
        accessToken:
          type: string
          format: JWT
      xml:
        name: LogResponse
    Todo:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        userId:
          type: string  
      xml:
        name: Todo
    TodoModify:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      xml:
        name: TodoModify
    Todo-DB-structure:
      type: object
      properties:
        id:
          type: string
          format: UUID automatically generated
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time automatically generated
        updatedAt:
          type: string
          format: date-time automatically generated
        userId:
          type: string 
      xml:
        name: Todo-DB-structure    